name: Generate and Commit GeoJSON

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Ejecución diaria a medianoche UTC

jobs:
  build-and-update:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4  # ✅ Correcto

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # ✅ Versión actualizada

      - name: Cache Python dependencies
        uses: actions/cache@v3    # ⚠️ Actualiza a v4 (versión más reciente)
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip  # Agregar para actualizar pip
          pip install -r requirements.txt

      - name: Run script to generate new data
        run: |
          python M357_MAP.py || exit 1  # ✅ Nombre exacto

      - name: Validate new GeoJSON
        run: |
          if [ -f new_data.geojson ]; then
            jq empty new_data.geojson || exit 1  # Mejor validación con jq
          else
            echo "No new data generated. Skipping validation."
          fi

      - name: Combine existing and new GeoJSON data
        run: |
          if [ -f new_data.geojson ]; then
            python combine_geojson.py masoneria_alertas.geojson new_data.geojson masoneria_alertas.geojson
          else
            echo "No new data generated. Skipping combination."
          fi

      - name: Clean temporary files
        run: |
          rm -f new_data.geojson

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "actions@github.com"
          git add .
          if git diff --staged --quiet; then  # Usar --staged en lugar de --cached
            echo "No changes to commit."
          else
            # Mensaje más robusto
            COUNT=$(jq '.features | length' new_data.geojson 2>/dev/null || echo 0)
            git commit -m "Auto-update: $(date +'%Y-%m-%d') - $COUNT nuevas entradas"
            git push
          fi

      - name: Deploy to GitHub Pages (opcional)
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./  # Asegurar que el GeoJSON esté en este directorio
          keep_files: true
